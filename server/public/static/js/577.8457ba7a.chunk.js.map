{"version":3,"file":"static/js/577.8457ba7a.chunk.js","mappings":"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","sources":["api/auth.ts","components/register/RegisterCard.tsx","pages/Register.tsx"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { LoginObj, RegisterObj } from '../interfaces/auth.interface';\n\nexport class Auth {\n\n  static async login(payload: LoginObj): Promise<any> {\n    return await axios\n                  .post('/auth/login', payload)\n                  .then((res: AxiosResponse) => {\n                    axios.defaults.headers.common[\"Authorization\"] = 'Bearer ' + res.data.detail\n                    return res\n                  }) // set token\n                  .catch(error => Promise.reject(error.response.data));\n  };\n\n  static async register(payload: RegisterObj): Promise<any> {\n    return await axios\n                  .post('auth/register', payload)\n                  .catch(error => Promise.reject(error.response.data));\n                 \n  };\n};","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './styles.css'\nimport locus1 from '../../assets/locus1.png'\nimport logreg from '../../assets/logreg.jpg'\n\ninterface Props {\n  submitHandler: Function;\n  error: string | null;\n};\n\nexport function RegisterCard({submitHandler, error}: Props): React.ReactElement {\n\n  const [username, setUsername] = useState<string>()\n  const [firstName, setFirstName] = useState<string>()\n  const [lastName, setLastName] = useState<string>()\n  const [gender, setGender] = useState<string>()\n  const [password, setPassword] = useState<string>()\n\n  return (\n    <>\n      <div>\n        <Link to='/'>\n          <div className='logo'>\n            <img className='logo' src={locus1} alt='logo' />\n          </div>\n        </Link>\n        <div className='register-card'>\n          <h2 className='title'>Create new account</h2>\n          <input type='text' \n                  placeholder='username' \n                  value={username} \n                  onChange={e => setUsername(e.target.value.toLocaleLowerCase())} \n                  required\n          />\n          <input type='text' \n                  placeholder='first name' \n                  value={firstName} \n                  onChange={e => setFirstName(e.target.value.toLocaleLowerCase())} \n                  required\n          />\n           <input type='text' \n                  placeholder='first name' \n                  value={lastName} \n                  onChange={e => setLastName(e.target.value.toLocaleLowerCase())} \n                  required\n          />\n          <select name=\"gender\" defaultValue={'DEFAULT'} onChange={e => setGender(e.target.value.toLocaleLowerCase())}>\n            <option value=\"DEFAULT\" disabled hidden>Gender</option>\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"bottts\">Robot</option>\n          </select>\n          <input type='password' \n                  placeholder='password' \n                  value={password} \n                  onChange={e => setPassword(e.target.value)} \n                  required\n          />\n          <button type='button' \n                  className='btn register-submit' \n                  onClick={() => submitHandler({username, firstName, lastName, gender, password})}\n          >\n            Register\n          </button>\n          <p className='error'>{error}</p>\n          <p className='redirect'>Already have an account? \n           &nbsp; <Link to='/login'>Login</Link>\n          </p>\n        </div>\n        <img className='bg-img' src={logreg} alt='bg' />\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Auth } from '../api/auth';\nimport { RegisterObj } from '../interfaces/auth.interface';\nimport { tryToCatch } from '../utils/tryToCatch';\nimport { RegisterCard } from '../components/register/RegisterCard';\n\nexport function Register() {\n\n  const navigate = useNavigate();\n\n  const [errorMessage, setErrorMessage] = useState<string | null >(null);\n\n  const submitHandler = async (payload: RegisterObj) => {\n    if (payload.username && payload.firstName && payload.lastName && payload.gender) {\n      const [error, res] = await tryToCatch(Auth.register, payload);\n      if (error) {\n        setErrorMessage(error.detail);;\n      } else if (res) {\n        navigate('/login');\n      }\n    } else {\n      setErrorMessage('please fill out all the fields!');\n    };\n  };\n\n  return <RegisterCard submitHandler={submitHandler} error={errorMessage} />;\n};\n"],"names":["Auth","payload","axios","then","res","data","detail","catch","error","Promise","reject","response","RegisterCard","submitHandler","useState","username","setUsername","firstName","setFirstName","lastName","setLastName","gender","setGender","password","setPassword","to","className","src","locus1","alt","type","placeholder","value","onChange","e","target","toLocaleLowerCase","required","name","defaultValue","disabled","hidden","onClick","logreg","Register","navigate","useNavigate","errorMessage","setErrorMessage","tryToCatch"],"sourceRoot":""}