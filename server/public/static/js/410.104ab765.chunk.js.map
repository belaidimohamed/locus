{"version":3,"file":"static/js/410.104ab765.chunk.js","mappings":"6MAGaA,EAAb,oHAEE,WAAmBC,GAAnB,iFACeC,IAAAA,KACO,cAAeD,GACpBE,MAAK,SAACC,GAEL,OADAF,IAAAA,SAAAA,QAAAA,OAAAA,cAAiD,UAAYE,EAAIC,KAAKC,OAC/DF,KAERG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,OAAOF,EAAMG,SAASN,SAP9D,mFAFF,gHAYE,WAAsBJ,GAAtB,iFACeC,IAAAA,KACO,gBAAiBD,GACtBM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,OAAOF,EAAMG,SAASN,SAH9D,mFAZF,+D,yLCUO,SAASO,EAAT,GAAuE,IAAnDC,EAAkD,EAAlDA,cAAeL,EAAmC,EAAnCA,MAExC,GAAgCM,EAAAA,EAAAA,YAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAgCF,EAAAA,EAAAA,YAAhC,eAAOG,EAAP,KAAiBC,EAAjB,KAEA,OACE,+BACE,iBAAKC,UAAU,aAAf,WACE,SAAC,KAAD,CAAMC,GAAG,IAAT,UACE,gBAAKD,UAAU,OAAf,UACE,gBAAKA,UAAU,OAAOE,IAAKC,EAAQC,IAAI,cAG3C,iBAAKJ,UAAU,OAAf,WACE,eAAIA,UAAU,QAAd,oBACA,kBAAOK,KAAK,OACNC,YAAY,WACZC,MAAOX,EACPY,SAAU,SAAAC,GAAC,OAAIZ,EAAYY,EAAEC,OAAOH,MAAMI,sBAC1CC,UAAQ,KAEd,kBAAOP,KAAK,WACNC,YAAY,WACZC,MAAOT,EACPU,SAAU,SAAAC,GAAC,OAAIV,EAAYU,EAAEC,OAAOH,QACpCK,UAAQ,KAEd,mBAAQP,KAAK,SAASL,UAAU,mBAAmBa,QAAS,kBAAMnB,EAAc,CAACE,SAAAA,EAAUE,SAAAA,KAA3F,oBAGA,cAAGE,UAAU,QAAb,SAAsBX,KACtB,eAAGW,UAAU,WAAb,0CACQ,SAAC,KAAD,CAAMC,GAAG,YAAT,6BAGV,gBAAKD,UAAU,SAASE,IAAKY,EAAQV,IAAI,Y,cCrC1C,SAASW,IAEd,IAAMC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GACnBC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCzB,EAAAA,EAAAA,UAAyB,MAAjE,eAAO0B,EAAP,KAAqBC,EAArB,KAEM5B,EAAa,mCAAG,WAAOZ,GAAP,iFAChBA,EAAQc,WAAYd,EAAQgB,SADZ,kCAESyB,EAAAA,EAAAA,GAAW1C,EAAAA,EAAAA,MAAYC,GAFhC,+BAEXO,EAFW,KAEJJ,EAFI,KAGdI,EACFiC,EAAgBjC,EAAMF,SAEtBqC,aAAaC,QAAQ,QAASxC,EAAIC,KAAKC,QACvC6B,EAAMU,SAASzC,EAAIC,KAAKC,QACxBgC,EAAS,cARO,wBAWlBG,EAAgB,uCAXE,4CAAH,sDAenB,OAAO,SAAC7B,EAAD,CAAWC,cAAeA,EAAeL,MAAOgC,M","sources":["api/auth.ts","components/login/LoginCard.tsx","pages/Login.tsx"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { LoginObj, RegisterObj } from '../interfaces/auth.interface';\n\nexport class Auth {\n\n  static async login(payload: LoginObj): Promise<any> {\n    return await axios\n                  .post('/auth/login', payload)\n                  .then((res: AxiosResponse) => {\n                    axios.defaults.headers.common[\"Authorization\"] = 'Bearer ' + res.data.detail\n                    return res\n                  }) // set token\n                  .catch(error => Promise.reject(error.response.data));\n  };\n\n  static async register(payload: RegisterObj): Promise<any> {\n    return await axios\n                  .post('auth/register', payload)\n                  .catch(error => Promise.reject(error.response.data));\n                 \n  };\n};","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './styles.css'\n\nimport logreg from '../../assets/logreg.jpg'\nimport locus1 from '../../assets/locus1.png'\n\ninterface props {\n  submitHandler: Function;\n  error: string | null ;\n};\n\nexport function LoginCard({submitHandler, error}: props): React.ReactElement {\n\n  const [username, setUsername] = useState<string>()\n  const [password, setPassword] = useState<string>()\n\n  return (\n    <>\n      <div className='login-card'>\n        <Link to='/'>\n          <div className='logo'>\n            <img className='logo' src={locus1} alt='logo' />\n          </div>\n        </Link>\n        <div className='card'>\n          <h1 className='title'>Login</h1>\n          <input type='text' \n                placeholder='username' \n                value={username}\n                onChange={e => setUsername(e.target.value.toLocaleLowerCase())} \n                required\n          />\n          <input type='password' \n                placeholder='password' \n                value={password}\n                onChange={e => setPassword(e.target.value)} \n                required\n          />\n          <button type='button' className='btn login-submit' onClick={() => submitHandler({username, password})}>\n            Login\n          </button>\n          <p className='error'>{error}</p>\n          <p className='redirect'>Don't have an account? \n           &nbsp; <Link to='/register'>Register</Link>\n          </p>\n        </div>\n        <img className='bg-img' src={logreg} alt='bg' />\n      </div>\n    </>\n  )\n}\n\n","import React, { useContext, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nimport { Auth } from '../api/auth';\nimport { LoginObj } from '../interfaces/auth.interface';\nimport { tryToCatch } from '../utils/tryToCatch';\nimport { LoginCard } from '../components/login/LoginCard';\n\nimport { TokenContext } from '../store/token.conetxt';\n\n\nexport function Login(): React.ReactElement {\n\n  const token = useContext(TokenContext)\n  const navigate = useNavigate();\n\n  const [errorMessage, setErrorMessage] = useState<string | null >(null);\n  \n  const submitHandler = async (payload: LoginObj) => {\n    if (payload.username && payload.password) {\n      const [error, res] = await tryToCatch(Auth.login, payload);\n      if (error) {\n        setErrorMessage(error.detail);\n      } else {\n        localStorage.setItem('token', res.data.detail);\n        token.setToken(res.data.detail)\n        navigate('/messages');\n      }\n    } else {\n      setErrorMessage('username and password are required!');\n    }\n  };\n\n  return <LoginCard submitHandler={submitHandler} error={errorMessage} />;\n}\n"],"names":["Auth","payload","axios","then","res","data","detail","catch","error","Promise","reject","response","LoginCard","submitHandler","useState","username","setUsername","password","setPassword","className","to","src","locus1","alt","type","placeholder","value","onChange","e","target","toLocaleLowerCase","required","onClick","logreg","Login","token","useContext","TokenContext","navigate","useNavigate","errorMessage","setErrorMessage","tryToCatch","localStorage","setItem","setToken"],"sourceRoot":""}